-- create a subtable of orders per day. make sure whether you are counting invoices or line itemnss
-- select date(paid_at) as day,
-- count(DISTINCT invoice_id) as orders,
-- count(DISTINCT line_item_id) as line_items

-- from dsv1069.orders
-- group by (date(paid_at))

-- Exercise 2: “Check your joins”. We are still trying to count orders per day. In this step join the
-- sub table from the previous exercise to the dates rollup table so we can get a row for every
-- date. Check that the join works by just running a “select *” query
-- select 
-- *
-- from 
-- dsv1069.dates_rollup

-- left outer JOIN 
-- (

-- select orders.paid_at as day,
-- count(DISTINCT invoice_id) as orders,
-- count(DISTINCT line_item_id) as line_items

-- from dsv1069.orders
-- group by (orders.paid_at)
-- ) daily_orders
-- ON 
-- daily_orders.day >= dates_rollup.date
-- and dates_rollup.d7_ago < daily_orders.day






-- select 
-- dates_rollup.date,
-- COALESCE count(DISTINCT invoice_id) as orders,
-- COALESCE count(DISTINCT line_item_id) as items_ordered
-- from 
-- dsv1069.dates_rollup

-- left outer JOIN 
-- (

-- select orders.paid_at as day,
-- count(DISTINCT invoice_id) as orders,
-- count(DISTINCT line_item_id) as items_ordered

-- from dsv1069.orders
-- group by (orders.paid_at)
-- ) daily_orders
-- ON 
-- daily_orders.day >= dates_rollup.date
-- and dates_rollup.d7_ago < daily_orders.day
