-- 1.	Compare the final_assignments_qa table to the assignment events we captured for user_level_testing.
--Write an answer to the following question: Does this table have everything you need to compute metrics 
--like 30-day view-binary?
-- No, date column needed.





--2 2.	Write a query and table creation statement to make 
--final_assignments_qa look like the final_assignments table.
--If you discovered something missing in part 1, you may fill in the value with a place holder of the 
--appropriate data type. 

SELECT 
  item_id,
  test_a as test_assignment,
  (CASE WHEN test_a IS NOT NULL THEN 'test_a' 
  ELSE NULL END) as test_number,
  (CASE WHEN test_a IS NOT NULL THEN '2015-03-14 00:00:00' 
  ELSE NULL END) as test_start_date
FROM 
  dsv1069.final_assignments_qa
UNION 

SELECT 
  item_id,
  test_a as test_assignment,
  (CASE WHEN test_b IS NOT NULL THEN 'test_b' 
  ELSE NULL END) as test_number,
  (CASE WHEN test_b IS NOT NULL THEN '2015-03-14 00:00:00' 
  ELSE NULL END) as test_start_date
FROM 
  dsv1069.final_assignments_qa




--3.	Use the final_assignments table to calculate the order binary for the 30 day
--window after the test assignment for item_test_2 (You may include the day the test started)

SELECT 
  fa.item_id,

  fa.test_start_date,
  max(CASE 
      WHEN o.paid_at BETWEEN fa.test_start_date and fa.test_start_date + INTERVAL '30 days' THEN 1
      ELSE 0 END) as order_binary
      
FROM 
  dsv1069.final_assignments fa 
LEFT JOIN 
  dsv1069.orders o ON fa.item_id  = o.item_id
WHERE 
  fa.test_number = 'item_test_2'
GROUP BY 
  fa.item_id, fa.test_start_date





-- 4 Use the final_assignments table to calculate the view binary, and
-- average views for the 30 day window after the test assignment for
-- item_test_2. (You may include the day the test started)
SELECT 
  fa.item_id,
  fa.test_assignment,
  fa.test_number,
 
  max(CASE 
      WHEN events.event_time BETWEEN fa.test_start_date and fa.test_start_date + INTERVAL '30 days' THEN 1
      ELSE 0 END) as view_binary
      
FROM 

dsv1069.final_assignments fa

LEFT JOIN
(
SELECT
CASE WHEN parameter_name = 'item_id' THEN CAST( parameter_value as NUMERIC) ELSE NULL END as item_id,
event_time


FROM 
dsv1069.events e
WHERE 
event_name = 'view_item'
) AS events
ON fa.item_id = events.item_id
WHERE fa.test_number = 'item_test_2'
GROUP BY 
  fa.test_start_date, fa.item_id, events.item_id, fa.test_assignment, fa.test_number
--5 Use the https://thumbtack.github.io/abba/demo/abba.htmlto compute the lifts in metrics and the p-values 
--for the binary metrics ( 30 day order binary and 30 day view binary) using a interval 95% confidence. 

SELECT test_assignment,
       test_number,
       COUNT(DISTINCT item) AS number_of_items,
       SUM(view_binary_30d) AS view_binary_30d
FROM
  (SELECT final_assignments.item_id AS item,
          test_assignment,
          test_number,
          test_start_date,
          MAX((CASE
                   WHEN date(event_time) - date(test_start_date) BETWEEN 0 AND 30 THEN 1
                   ELSE 0
               END)) AS view_binary_30d
   FROM dsv1069.final_assignments
   LEFT JOIN dsv1069.view_item_events
     ON final_assignments.item_id = view_item_events.item_id
   WHERE test_number = 'item_test_2'

 


